@page "/"

@inject NavigationManager nav
@inject HttpClient Http



<h3 style="color:saddlebrown; text-align:center"><b>כניסת עורך</b></h3><br/>
<MudItem Style="width: 400px; height:300px">
    <MudTextField Placeholder="הזינו כתובת מייל" @bind-Value="inputMail" @onkeyup="ChangeButton" Label="כתובת מייל" Variant="Variant.Outlined"></MudTextField>
     <p style="color:red">@msg</p>
    <br />
    <MudButton Style="background-color:saddlebrown" Variant="Variant.Filled" Color="Color.Primary" @onclick="loginUser" Disabled="IsButtonEabled">כניסה</MudButton>
</MudItem>
   


    @code {

        bool IsButtonEabled = true;
        // string inputMail = "";

        void ChangeButton()
        {
            StateHasChanged();
            if (string.IsNullOrEmpty(inputMail) == false)
            {

                IsButtonEabled = true;
                StateHasChanged();

            }
            else
            {

                IsButtonEabled = false;
                StateHasChanged();

            }

        }



        string inputMail = "";
        string msg = "";
        async Task loginUser()
        {
            if (string.IsNullOrEmpty(inputMail) == false)
            {
                if (IsValidEmail(inputMail) == false)
                {
                    msg = "כתובת מייל אינה תקינה";
                }
                else
                {
                    var getResponse = await Http.GetAsync("api/users/" + inputMail);
                    if (getResponse.IsSuccessStatusCode)
                    {
                        int userId = getResponse.Content.ReadFromJsonAsync<int>().Result;
                        nav.NavigateTo("./Games/" + userId);
                    }
                    else
                    {
                        string error = getResponse.Content.ReadAsStringAsync().Result;
                        if (error == "User not found")
                        {
                            msg = "כתובת מייל לא קיימת";
                        }
                        else
                        {
                            msg = "התרחשה תקלת שרת";
                        }
                    }
                }
            }
            else
            {
                msg = "יש להקליד כתובת מייל";
            }
        }


        bool IsValidEmail(string email) // פונקציה שבודקת מבנה של אימייל תקין
        {
            var trimmedEmail = email.Trim();

            if (trimmedEmail.EndsWith("."))
            {
                return false; //
            }
            try
            {
                var addr = new System.Net.Mail.MailAddress(email);
                return addr.Address == trimmedEmail;
            }
            catch
            {
                return false;

            }
        }
    }
