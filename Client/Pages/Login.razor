@page "/"

@inject NavigationManager nav
@inject HttpClient Http
@inject IDialogService DialogService
@inject IDialogService Dialog



<div id="container" class="loginBG">
    <header>
        <a>
            <img id="logo" src="photo/logo.png" />
            <p>אי המטמון</p>
        </a>
        <nav>
            <ul>
                <li><a @onclick="@(() => GotoOdot(MyDialog))">אודות</a></li>
                <li><a @onclick="@(() => GotoHowtoDialog(MyDialog))">איך משחקים?</a></li>
                <li><a class="about" href="../indextest.html">למשחק</a></li>

            </ul>
        </nav>
    </header>

    <div id="gameArea">
        <div id="LoginSign">
            <h1>אי המטמון</h1>
        </div>
        <div id="MailArea">
            <br />
            <h3>כניסת עורך</h3><br />
            <div class="MailText">
                <MudTextField Label="כתובת מייל" Placeholder="הזינו כתובת מייל" @bind-Value="inputMail" @onkeypress="ChangeButton" Variant="Variant.Outlined"></MudTextField>
                <p style="color:red; text-align: right;">@msg</p>
                <br />

                @if (IsButtonEabled == true)
                {
                    <MudButton Style="background-color: #A5703C; border-radius:30px; width:32%;" Variant="Variant.Filled" Color="Color.Primary" @onclick="loginUser" Disabled="true">כניסה</MudButton>
                }
                else
                {
                    <MudButton Style="background-color: saddlebrown; border-radius: 30px; width:32%;" Variant="Variant.Filled" Color="Color.Primary" @onclick="loginUser">כניסה</MudButton>
                }
            </div>
        </div>
    </div>
</div>


@code {

    bool IsButtonEabled = true;
    // string inputMail = "";

    public void ChangeButton()
    {
        StateHasChanged();
        if (string.IsNullOrEmpty(inputMail) == false)
        {

            IsButtonEabled = true;
            StateHasChanged();

        }
        else
        {

            IsButtonEabled = false;
            StateHasChanged();

        }

    }



    string inputMail = "";
    string msg = "";
    async Task loginUser()
    {
        if (string.IsNullOrEmpty(inputMail) == false)
        {
            if (IsValidEmail(inputMail) == false)
            {
                msg = "כתובת מייל אינה תקינה";
            }
            else
            {
                var getResponse = await Http.GetAsync("api/users/" + inputMail);
                if (getResponse.IsSuccessStatusCode)
                {
                    int userId = getResponse.Content.ReadFromJsonAsync<int>().Result;
                    nav.NavigateTo("./Games/" + userId);
                }
                else
                {
                    string error = getResponse.Content.ReadAsStringAsync().Result;
                    if (error == "User not found")
                    {
                        msg = "כתובת מייל לא קיימת";
                    }
                    else
                    {
                        msg = "התרחשה תקלת שרת";
                    }
                }

            }
        }
        else
        {
            msg = "יש להקליד כתובת מייל";
        }

        inputMail = "";

    }


    bool IsValidEmail(string email) // פונקציה שבודקת מבנה של אימייל תקין
    {
        var trimmedEmail = email.Trim();

        if (trimmedEmail.EndsWith("."))
        {
            return false; //
        }
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == trimmedEmail;
        }
        catch
        {
            return false;

        }
    }

    DialogOptions MyDialog = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = true, CloseButton = true, DisableBackdropClick = true };


    void GotoHowtoDialog(DialogOptions options)
    {
        Console.WriteLine("נכנס לפונקציה");
        Console.WriteLine("options "+ options);
        var dialog = DialogService.Show<HowtoplayDialog>("הגדרות משחק", options);

        //var result = await dialog.Result;
    }

    void GotoOdot(DialogOptions options)
    {
        Console.WriteLine("נכנס לפונקציה");
        Console.WriteLine("options " + options);
        var dialog = DialogService.Show<Odot>("אודות", options);

        //var result = await dialog.Result;
    }
}
