@page "/"

@inject NavigationManager nav
@inject HttpClient Http
<h3>Login</h3>

<MudTextField @bind-Value="inputMail" Label="כתובת מייל" Variant="Variant.Outlined"></MudTextField>
<MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="loginUser">כניסה</MudButton>

<p>@msg</p>


@code {
        string inputMail = "";
        string msg = "";
        async Task loginUser()
        {
            if (string.IsNullOrEmpty(inputMail) == false)
            {
                if (IsValidEmail(inputMail) == false)
                {
                    msg = "כתובת מייל אינה תקינה";
                }
                else
                {
                    var getResponse = await Http.GetAsync("api/users/" + inputMail);
                    if (getResponse.IsSuccessStatusCode)
                    {
                        int userId = getResponse.Content.ReadFromJsonAsync<int>().Result;
                        nav.NavigateTo("./Games/" + userId);
                    }
                    else
                    {
                        string error = getResponse.Content.ReadAsStringAsync().Result;
                        if (error == "User not found")
                        {
                            msg = "כתובת מייל לא קיימת";
                        }
                        else
                        {
                            msg = "התרחשה תקלת שרת";
                        }
                    }
                }
            }
            else
            {
                msg = "יש להקליד כתובת מייל";
            }
        }
    

    bool IsValidEmail(string email) // פונקציה שבודקת מבנה של אימייל תקין 
    {
        var trimmedEmail = email.Trim();

        if (trimmedEmail.EndsWith("."))
        {
            return false; // 
        }
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == trimmedEmail;
        }
        catch
        {
            return false;

        }
    }
}
