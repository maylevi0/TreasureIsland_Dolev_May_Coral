@page "/Games/{userID:int}"
@using TreasureIsland_Dolev_May_Coral.Shared.Entities
@inject HttpClient Http
@inject NavigationManager nav
@using System.ComponentModel.DataAnnotations

<h1> המשחקים של @CurrentUser.FirstName @CurrentUser.LastName</h1>
<br />
<MudItem>
    <MudButton ButtonType="ButtonType.Button" Color="Color.Secondary" OnClick="showComponent">יצירת משחק חדש</MudButton>
</MudItem>
<br />
<br />
@if (status == true)

{
    <EditForm Model="@newGame" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="7" sm="12">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="שם משחק" HelperText="2-25 תווים"
                                      @bind-Value="newGame.GameName" For="@(() => newGame.GameName)" />

                        <MudSelect T="int" Label="זמן שאלה" @bind-Value="newGame.QTimeLimit" For="@(() => newGame.QTimeLimit)" AnchorOrigin="Origin.BottomCenter">
                            <MudSelectItem T="int" Value="20" />
                            <MudSelectItem T="int" Value="30" />
                            <MudSelectItem T="int" Value="40" />
                            <MudSelectItem T="int" Value="50" />
                            <MudSelectItem T="int" Value="60" />
                        </MudSelect>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">צור משחק</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>

        </MudGrid>
    </EditForm>

}

<MudTable Items="@CurrentUser.UserGames" Hover="true">
    <HeaderContent>

        <MudTh>שם המשחק</MudTh>
        <MudTh>לצפייה</MudTh>
        <MudTh>קוד משחק</MudTh>
        <MudTh>מספר שאלות</MudTh>
        <MudTh>הגדרות משחק</MudTh>
        <MudTh>עריכה</MudTh>
        <MudTh>מחיקה</MudTh>
        <MudTh>פרסום</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="שם המשחק">@context.GameName</MudTd>
        <MudTd DataLabel="לצפייה"><MudButton>כפתור</MudButton></MudTd>
        <MudTd DataLabel="קוד המשחק">@context.GameCode</MudTd>
        <MudTd DataLabel="מספר שאלות">@context.GameQuestions.Count</MudTd>
        <MudTd DataLabel="הגדרות משחק"><MudButton>כפתור</MudButton></MudTd>
        <MudTd DataLabel="עריכה"><MudButton>כפתור</MudButton></MudTd>
        <MudTd DataLabel="מחיקה"><MudButton>כפתור</MudButton></MudTd>
        <MudTd DataLabel="פרסום">
            <MudCheckBox CheckedChanged="@((bool newState) => PublishGame(context))" Checked="@context.IsPublish" Color="Color.Primary"></MudCheckBox>
        </MudTd>
    </RowTemplate>
</MudTable>



<p>@msg</p>


@code {


    [Parameter]
    public int userID { get; set; }


    // חיווי למשתמש
    string msg = "";

    //יצירת מופע חדש של יוזר
    User CurrentUser = new User();

    //יצירת מופע חדש של משחק
    Game newGame = new Game();


    //מצב מוסתר של טופס צור משחק
    public bool status = false;
    // הופך את הטופס לנראה ממצב מוסתר
    void showComponent()
    {
        status = true;

    }

    //קריאה למאגר נותנים הצגת המשחקים של היוזר
    protected async override Task OnInitializedAsync()
    {
        var GetResponse = await Http.GetAsync("api/Games/" + userID);
        if (GetResponse.IsSuccessStatusCode == true)
        {
            CurrentUser = GetResponse.Content.ReadFromJsonAsync<User>().Result;
        }
        else
        {
            string error = GetResponse.Content.ReadAsStringAsync().Result;
            if (error == "user not login" || error == "empty Session")
            {
                nav.NavigateTo("./");
            }
            else
            {
                msg = "התרחשה תקלת שרת";
            }
        }

    }

    //void PublishGame(Game selectedGame)
    //{

    //    selectedGame.IsPublish = !selectedGame.IsPublish;
    //}

    //קריאה לקונטרולר לעדכון סטטוס המשחק האם פורסם

    async Task PublishGame(Game selectedGame)
    {
        selectedGame.IsPublish = !selectedGame.IsPublish;

        Console.WriteLine("המשחק פורסם / לא פורסם");

        var postRespone = await Http.PostAsJsonAsync("api/Games/Update/Publish", selectedGame);
        if (postRespone.IsSuccessStatusCode == true)
        {
            Game updateGame = postRespone.Content.ReadFromJsonAsync<Game>().Result;

            selectedGame = new Game();
        }
        else
        {
            msg = "משחק לא פורסם";
        }


    }


    // קשור לטופס בלייזור
    bool success;

    //בלחיצה על כפתור של הטופס צריך להפעיל קריאה למאגר נתונים
    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }


}